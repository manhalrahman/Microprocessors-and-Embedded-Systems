EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
final.bin -- emu8086 assembler version: 4.08  
 
[ 19-04-2020  --  21:22:11 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       
[   2]        :                                       
[   3]        :                                       #LOAD_SEGMENT=FFFFh#
[   4]        :                                       #LOAD_OFFSET=0000h#
[   5]        :                                       
[   6]        :                                       #CS=0000h#
[   7]        :                                       #IP=0000h#
[   8]        :                                       
[   9]        :                                       #DS=0000h#
[  10]        :                                       #ES=0000h#
[  11]        :                                       
[  12]        :                                       #SS=0000h#
[  13]        :                                       #SP=FFFEh#
[  14]        :                                       
[  15]        :                                       #AX=0000h#
[  16]        :                                       #BX=0000h#
[  17]        :                                       #CX=0000h#
[  18]        :                                       #DX=0000h#
[  19]        :                                       #SI=0000h#
[  20]        :                                       #DI=0000h#
[  21]        :                                       #BP=0000h#
[  22]        :                                       ; this header has to remain
[  23]        :                                       ; add your code here
[  24]    0000: E9 FD 03                              jmp     st1
[  25]        :                                       ;proteus allows you to change the reset address - hence changing it to 00000H - so every time
[  26]        :                                       ;system is reset it will go and execute the instruction at address 00000H - which is jmp st1
[  27]    0003: 00 00 00 00 00 00 00 00 00 00 00 00   db     1021 dup(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00                                  
[  28]        :                                       ;jmp st1 will take up 3 bytes in memory - another 509 bytes are filled with '0s'
[  29]        :                                       ;1021 + 3 bytes = 1024 bytes
[  30]        :                                       ;first 1 k of memory is IVT - 00000 -00002H will now have the jmp instruction. 00003H - 001FFH will
[  31]        :                                       ;have 00000 - as vector number 0 to 79H are unused
[  32]        :                                       ;IVT entry for 80H - address for entry is 80H x 4 is 00200H
[  33]        :                                       ;code segment will be in ROM
[  34]    0400: FA                                    st1:      cli
[  35]        :                                       ; intialize ds, es,ss to start of RAM - that is 020000H - as you need r/w capability for DS,ES & SS
[  36]        :                                       ; pl note you cannot use db to store data in the RAM you have to use a MOV instruction.
[  37]        :                                       ; so if you want to do dat1 db 78H - you have to say something like
[  38]        :                                       ; dat1 equ 0002h
[  39]        :                                       ; mov al,78h
[  40]        :                                       ; mov dat1,al
[  41]        :                                       ;0002H is the offset in data segmnet where you are storing the data.
[  42]        :                                       ;db can be used only to store data in code segment
[  43]    0401: B8 00 10                              mov       ax,01000h
[  44]    0404: 8E D8                                 mov       ds,ax
[  45]    0406: 8E C0                                 mov       es,ax
[  46]    0408: 8E D0                                 mov       ss,ax
[  47]    040A: BC FE FF                              mov       sp,0FFFEH
[  48]        :                                       
[  49]        :                                       ; intialise portA as input portB,portC as output for the first 8255
[  50]    040D: B0 90                                 mov       al,90h      ;1st
[  51]    040F: E6 06                                 	out     06h,al
[  52]        :                                       
[  53]        :                                       ;Keep polling port A until you get 1 from the switch
[  54]    0411: E4 00                                 POLLING :     in        al,00h
[  55]    0413: B3 01                                 	 mov       bl,01h
[  56]    0415: 3A D8                                 	 cmp       bl,al
[  57]    0417: 90 90                                 	 jnz POLLING
[  58]        :                                       
[  59]    0419:                                       TRUE:
[  60]        :                                       
[  61]        :                                       ; initialize portA,B as output and port C isnt connected
[  62]    0419: B0 80                                 mov       al,10000000b       ;2nd
[  63]    041B: E6 0E                                 out       0Eh,al
[  64]        :                                       
[  65]        :                                       
[  66]    041D: BA 00 00                              mov dx,00h
[  67]        :                                       
[  68]    0420:                                       START:
[  69]    0420: B5 FE                                 mov ch,11111110b
[  70]    0422: B7 01                                 mov bh,00000001b
[  71]        :                                       
[  72]        :                                       
[  73]    0424: B1 08                                 mov cl,08
[  74]        :                                       
[  75]        :                                       ;for reading and writing 0's
[  76]    0426:                                       START1:
[  77]    0426: 8A C2                                 mov al,dl
[  78]    0428: E6 08                                 out 08h,al
[  79]    042A: 8A C6                                 mov al,dh
[  80]    042C: 24 BF                                 and al,10111111b      ;Turn on write enable
[  81]    042E: 0C 20                                 or  al,00100000b      ;Turn off read enable!
[  82]    0430: 24 7F                                 and  al,01111111b     ;Turn on CE!
[  83]        :                                       
[  84]    0432: E6 0A                                 out 0Ah,al
[  85]        :                                       
[  86]    0434: B0 92                                 mov       al,10010010b    ;Initialize 3rd 8255 to write data ;So port C in output mode
[  87]    0436: E6 16                                 out       16h,al
[  88]        :                                       
[  89]    0438: 8A C5                                 mov al,ch    ; Write from Port C of 3rd 8255
[  90]    043A: E6 14                                 out 14h,al
[  91]        :                                       
[  92]        :                                       
[  93]    043C: 8A C6                                 mov al,dh
[  94]    043E: 24 DF                                 and al,11011111b      ;Turn on read enable!
[  95]    0440: 0C 40                                 or  al,01000000b      ;Turn off write enable dash!
[  96]    0442: 24 7F                                 and  al,01111111b     ;Turn on CE!
[  97]    0444: E6 0A                                 out 0Ah,al
[  98]        :                                       
[  99]        :                                       
[ 100]        :                                       
[ 101]    0446: B0 9B                                 mov       al,10011011b    ;Initialize 3rd 8255 to read data : So port C in input mode
[ 102]    0448: E6 16                                 out       16h,al
[ 103]        :                                       
[ 104]    044A: E4 14                                 in al,14h
[ 105]        :                                       
[ 106]    044C: 8A DD                                 mov bl,ch
[ 107]    044E: 3A C3                                 cmp al,bl
[ 108]    0450: 75 3D                                 jnz FAIL
[ 109]        :                                       
[ 110]        :                                       	  ;for reading and writing 1's	
[ 111]        :                                       
[ 112]    0452: 8A C2                                 mov al,dl
[ 113]    0454: E6 08                                 out 08h,al
[ 114]        :                                       
[ 115]    0456: 8A C6                                 mov al,dh
[ 116]    0458: 24 BF                                 and al,10111111b      ;Turn on write enable dash!
[ 117]    045A: 0C 20                                 or  al,00100000b      ;Turn off read enable!
[ 118]    045C: 24 7F                                 and  al,01111111b     ;Turn on CE!
[ 119]        :                                       
[ 120]    045E: E6 0A                                 out 0Ah,al
[ 121]        :                                       
[ 122]    0460: B0 92                                 mov       al,10010010b    ;Initialize 3rd 8255 to write data ;So port C in output mode
[ 123]    0462: E6 16                                 out       16h,al
[ 124]        :                                       
[ 125]    0464: 8A C7                                 mov al,bh     ; Write from Port C of 3rd 8255
[ 126]    0466: E6 14                                 out 14h,al
[ 127]        :                                       
[ 128]        :                                       
[ 129]    0468: 8A C6                                 mov al,dh
[ 130]    046A: 24 DF                                 and al,11011111b      ;Turn on read enable!
[ 131]    046C: 0C 40                                 or  al,01000000b      ;Turn off write enable dash!
[ 132]    046E: 24 7F                                 and  al,01111111b     ;Turn on CE!
[ 133]    0470: E6 0A                                 out 0Ah,al
[ 134]        :                                       
[ 135]        :                                       
[ 136]        :                                       
[ 137]    0472: B0 9B                                 mov       al,10011011b    ;Initialize 3rd 8255 to read data : So port C in input mode
[ 138]    0474: E6 16                                 out       16h,al
[ 139]        :                                       
[ 140]    0476: E4 14                                 in al,14h
[ 141]        :                                       
[ 142]    0478: 8A DF                                 mov bl,bh
[ 143]    047A: 3A C3                                 cmp al,bl
[ 144]    047C: 75 11                                 jnz FAIL
[ 145]        :                                       
[ 146]        :                                       
[ 147]        :                                       
[ 148]        :                                       
[ 149]        :                                       
[ 150]    047E: D0 C5                                 ROL ch,1
[ 151]    0480: D0 C7                                 ROL bh,1
[ 152]        :                                       
[ 153]    0482: FE C9                                 dec cl
[ 154]    0484: 75 A0                                 jnz START1
[ 155]    0486: 42                                    inc dx
[ 156]    0487: 81 FA 00 20                           cmp dx,8192d
[ 157]    048B: 74 43                                 jz PASS
[ 158]    048D: EB 91                                 jmp  START
[ 159]        :                                       
[ 160]        :                                       
[ 161]        :                                       
[ 162]        :                                       ;Fail on LED
[ 163]        :                                       
[ 164]        :                                       
[ 165]    048F: B0 FF                                 FAIL:     mov al,0FFh
[ 166]    0491: E6 04                                 out 04,al
[ 167]        :                                       
[ 168]        :                                       
[ 169]    0493: B0 01                                 mov al,01h
[ 170]    0495: E6 02                                 out 02h,al
[ 171]        :                                       
[ 172]    0497: B0 8E                                 mov al,8eh        ;For F
[ 173]    0499: E6 04                                 out 04h,al
[ 174]        :                                       
[ 175]    049B: B0 02                                 mov al,02h
[ 176]    049D: E6 02                                 out 02h,al
[ 177]        :                                       
[ 178]    049F: B0 88                                 mov al,88h        ;For a
[ 179]    04A1: E6 04                                 out 04h,al
[ 180]        :                                       
[ 181]        :                                       
[ 182]    04A3: B0 00                                 mov al,00
[ 183]    04A5: E6 02                                 out 02h,al
[ 184]        :                                       
[ 185]    04A7: B0 FF                                 mov al,0ffh
[ 186]    04A9: E6 04                                 out 04h,al
[ 187]        :                                       
[ 188]    04AB: B0 04                                 mov al,04h
[ 189]    04AD: E6 02                                 out 02h,al
[ 190]        :                                       
[ 191]        :                                       
[ 192]    04AF: B0 F9                                 mov al,0F9h        ;For I
[ 193]    04B1: E6 04                                 out 04h,al
[ 194]        :                                       
[ 195]        :                                       
[ 196]    04B3: B0 08                                 mov al,08h
[ 197]    04B5: E6 02                                 out 02h,al
[ 198]        :                                       
[ 199]    04B7: B0 C7                                 mov al,0c7h        ;For L
[ 200]    04B9: E6 04                                 out 04h,al
[ 201]        :                                       
[ 202]    04BB: B0 00                                 mov al,00
[ 203]    04BD: E6 02                                 out 02h,al
[ 204]        :                                       
[ 205]    04BF: B0 FF                                 mov al,0ffh
[ 206]    04C1: E6 04                                 out 04h,al
[ 207]        :                                       						;this for the recurssion of the program
[ 208]    04C3: E4 00                                 in        al,00h
[ 209]    04C5: B3 01                                 mov       bl,01h
[ 210]    04C7: 3A D8                                 cmp       bl,al
[ 211]    04C9: 75 03 E9 4B FF                        jz TRUE
[ 212]        :                                       
[ 213]        :                                       
[ 214]    04CE: EB BF                                 jmp FAIL
[ 215]        :                                       
[ 216]        :                                       ;Pass on LED
[ 217]        :                                       
[ 218]        :                                       
[ 219]        :                                       
[ 220]    04D0: B0 FF                                 PASS:       mov al,0FFh
[ 221]    04D2: E6 04                                 out 04,al
[ 222]        :                                       
[ 223]        :                                       
[ 224]    04D4: B0 01                                 mov al,01h
[ 225]    04D6: E6 02                                 out 02h,al
[ 226]        :                                       
[ 227]    04D8: B0 8C                                 mov al,8ch       ;For P
[ 228]    04DA: E6 04                                 out 04,al
[ 229]        :                                       
[ 230]    04DC: B0 02                                 mov al,02h
[ 231]    04DE: E6 02                                 out 02h,al
[ 232]        :                                       
[ 233]    04E0: B0 88                                 mov al,88h        ;For A
[ 234]    04E2: E6 04                                 out 04,al
[ 235]        :                                       
[ 236]    04E4: B0 04                                 mov al,04h
[ 237]    04E6: E6 02                                 out 02h,al
[ 238]        :                                       
[ 239]    04E8: B0 92                                 mov al,92h		;for S
[ 240]    04EA: E6 04                                 out 04,al
[ 241]        :                                       
[ 242]        :                                       
[ 243]    04EC: B0 08                                 mov al,08h
[ 244]    04EE: E6 02                                 out 02h,al
[ 245]        :                                       
[ 246]    04F0: B0 92                                 mov al,92h		;for S
[ 247]    04F2: E6 04                                 out 04,al
[ 248]        :                                       
[ 249]    04F4: B0 00                                 mov al,00
[ 250]    04F6: E6 02                                 out 02h,al
[ 251]        :                                       
[ 252]    04F8: B0 FF                                 mov al,0ffh
[ 253]    04FA: E6 04                                 out 04h,al
[ 254]        :                                       						;this for the recurssion of the program
[ 255]    04FC: E4 00                                 in        al,00h
[ 256]    04FE: B3 01                                 mov       bl,01h
[ 257]    0500: 3A D8                                 cmp       bl,al
[ 258]    0502: 75 03 E9 12 FF                        jz TRUE
[ 259]        :                                       
[ 260]        :                                       
[ 261]    0507: EB C7                                 jmp PASS
[ 262]        :                                       
[ 263]        :                                       
[ 264]        :                                       
[ 265]        :                                       
[ 266]        :                                       
[ 267]        :                                       
 
===================================================================================================
 




===================================================================================================
